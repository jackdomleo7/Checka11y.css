%background-color {
  background: #f5f2f0 !important;
}

code[class *= "language-"],
pre[class *= "language-"] {
  background: none;
  color: #000;
  font-family: "Courier New", Courier, monospace;
  font-size: 1em;
  hyphens: none;
  line-height: 1.5;
  tab-size: 4;
  text-align: left;
  text-shadow: 0 1px #fff;
  white-space: pre;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;

  @media print {
    text-shadow: none;
  }
}

pre {
  &[class *= "language-"] {
    @extend %background-color;
    margin: 0;
    overflow-x: auto;
    padding: 1.5em 1em 1em;
  }
}

:not( pre ) > code[class *= "language-"] {
  @extend %background-color;
  border-radius: 0.3em;
  padding: 0.1em;
  white-space: normal;
}

.token {
  &.comment,
  &.prolog,
  &.doctype,
  &.cdata {
    color: #708090;
  }

  &.punctuation {
    color: #999;
  }

  &.namespace {
    opacity: 0.7;
  }

  &.property,
  &.tag,
  &.boolean,
  &.number,
  &.constant,
  &.symbol,
  &.deleted {
    color: #905;
  }

  &.selector,
  &.attr-name,
  &.string,
  &.char,
  &.builtin,
  &.inserted {
    color: #690;
  }

  &.operator,
  &.entity,
  &.url {
    background: rgba(255, 255, 255, 0.5);
    color: #9a6e3a;
  }

  &.atrule,
  &.attr-value,
  &.keyword {
    color: #07a;
  }

  &.function,
  &.class-name {
    color: #dd4a68;
  }

  &.regex,
  &.important,
  &.variable {
    color: #e90;
  }

  &.important,
  &.bold {
    font-weight: 700;
  }

  &.italic {
    font-style: italic;
  }

  &.entity {
    cursor: help;
  }
}

.language-css,
.style {
  .token.string {
    background: rgba(255, 255, 255, 0.5);
    color: #9a6e3a;
  }
}

div {
  &[class *= "language-"] {
    margin: 0.5em 0;
    overflow-x: hidden;
    position: relative;

    &::before {
      color: #999;
      font-family: Verdana, Geneva, Tahoma, sans-serif;
      font-size: 0.7rem;
      position: absolute;
      right: 0.5em;
      top: 0.25em;
    }
  }

  &.language-css {
    &::before {
      content: "CSS";
    }
  }

  &.language-sass {
    &::before {
      content: "Sass / SCSS";
    }
  }

  &.language-js {
    &::before {
      content: "JS";
    }
  }

  &.language-markup {
    &::before {
      content: "HTML";
    }
  }

  &.language-cli {
    &::before {
      content: "CLI";
    }

    code {
      &::before {
        content: "$ ";
      }
    }
  }

  &.language-none {
    pre {
      padding: 1em;
    }
  }

  &.no-label {
    &::before {
      content: "" !important;
    }
  }
}
